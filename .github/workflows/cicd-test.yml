name: CICD Backend Pipeline on Develop
on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
env:
  ENVIRONMENT: "dev"  
  GH_REPOSITORY_NAME: GlyphGenAI
  S3_VERSION: "s3://csekspreprodbuilds/builds/eks"
  BUILD_NUMBER: ${{ github.run_number }}
  APP_COMPONENT: backend
  TAG_DEPLOYMENT: dev-latest
  IMAGE_DIGEST: 0

jobs:
  check-pr-close:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      id-token: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: "Get version string"
        id: calc_version
        run: |
          VERSION="1.0.5"
          TAG="v-$VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=$TAG" >> $GITHUB_OUTPUT
      - name: "Promote-tag images"
        run: |
          DEV_PREFIX="dev"
          VERSION="${{ steps.calc_version.outputs.version }}"
          FINAL_TAG="${{ steps.calc_version.outputs.tag }}"
          REGION="us-east-1"

          for REPO in api dashboard account-service; do
            echo "Promoting image for $REPO..."
            MANIFEST=$(echo true)

            #If image was tagged with new prefix then we are going to add prod tag
            if [ -n "$MANIFEST" ]; then
              echo "Found image for $REPO: $DEV_PREFIX-$VERSION. Promoting to $FINAL_TAG..."
            fi
          done
          sleep 5          
      - name: "Get PR number if this is a PR"
        if: github.ref_name != 'master'
        uses: jwalton/gh-find-current-pr@v1
        id: findPr
      - name: Check PR Status Before Deployment
        if: github.ref_name != 'master'
        id: check_pr
        run: |
          PR_STATE=$(gh pr view ${{ github.event.pull_request.number }} --json state -q '.state')
          echo "$PR_STATE"
          if [[ "$PR_STATE" != "OPEN" ]]; then
            echo "PR is closed. Skipping deployment."
            exit 1
          fi
          sleep 300
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
